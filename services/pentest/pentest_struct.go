package pentest

import "encoding/xml"

type AuthenticateResponse struct {
	XMLName    xml.Name `xml:"authenticate_response"`
	Status     string   `xml:"status,attr"`
	StatusText string   `xml:"status_text,attr"`
	Role       string   `xml:"role"`
	Timezone   string   `xml:"timezone`
	Severity   string   `xml:"severity`
}

type CreateTargetResponse struct {
	Authenticate AuthenticateResponse `xml:"authenticate_response"`
	CreateTarget struct {
		XMLName    xml.Name `xml:"create_target_response"`
		Status     string   `xml:"status,attr"`
		StatusText string   `xml:"status_text,attr"`
		Id         string   `xml:"id,attr"`
	}
}

type GetConfigsResponse struct {
	Authenticate         AuthenticateResponse `xml:"authenticate_response"`
	Get_configs_response struct {
		XMLName     xml.Name `xml:"get_configs_response"`
		Status      string   `xml:"status,attr"`
		Status_text string   `xml:"status_text,attr"`
		Config      []Config `xml:"config"`
		Filters     Filters  `xml:"filters"`
		Configs     Configs  `xml:"configs"`
		Field       string   `xml:"sort>field"`
	}
}

type Filters struct {
	XMLName  xml.Name `xml:"filters"`
	Id       string   `xml:"id,attr"`
	Term     string   `xml:"term"`
	Value    []string `xml:"keywords>keyword>value"`
	Column   []string `xml:"keywords>keyword>column"`
	Relation []string `xml:"keywords>keyword>relation"`
}
type Configs struct {
	Max   string `xml:"max,attr"`
	Start string `xml:"start,attr"`
}

type Config struct {
	XMLName                        xml.Name `xml:"config"`
	Id                             string   `xml:"id,attr"`
	Config_count                   string   `xml:"config_count"`
	Family_count                   []string `xml:"family_count"`
	Type                           []string `xml:"type"`
	Nvt_count                      []string `xml:"nvt_count"`
	Count                          []string `xml:"user_tags>count"`
	Permissions                    []string `xml:"permissions"`
	Comment                        []string `xml:"comment"`
	Writable                       []string `xml:"writable"`
	In_use                         []string `xml:"in_use"`
	Creation_time                  []string `xml:"creation_time"`
	Modification_time              []string `xml:"modification_time"`
	Name                           []string `xml:"owner>name"`
	NameConfigGet_configs_response []string `xml:"name"`
}

type CreateTaskResponse struct {
	Authenticate AuthenticateResponse `xml:"authenticate_response"`
	CreateTask   struct {
		XMLName    xml.Name `xml:"create_task_response"`
		Status     string   `xml:"status,attr"`
		StatusText string   `xml:"status_text,attr"`
		Id         string   `xml:"id,attr"`
	}
}

type StartTaskResponse struct {
	Authenticate AuthenticateResponse `xml:"authenticate_response"`
	StartTask    struct {
		XMLName    xml.Name `xml:"start_task_response"`
		Status     string   `xml:"status,attr"`
		StatusText string   `xml:"status_text,attr"`
		ReportId   string   `xml:"report_id"`
	}
}
